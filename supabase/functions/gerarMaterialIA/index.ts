
import "https://deno.land/x/xhr@0.1.0/mod.ts";
import { serve } from "https://deno.land/std@0.168.0/http/server.ts";

const openAIApiKey = Deno.env.get('OPENAI_API_KEY');

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

interface MaterialFormData {
  tema?: string;
  topic?: string;
  disciplina?: string;
  subject?: string;
  serie?: string;
  grade?: string;
  assuntos?: string[];
  subjects?: string[];
  tipoQuestoes?: string;
  tiposQuestoes?: string[];
  numeroQuestoes?: number;
  quantidadeQuestoes?: number;
  professor?: string;
  data?: string;
  duracao?: string;
  bncc?: string;
}

serve(async (req) => {
  // Handle CORS preflight requests
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { materialType, formData } = await req.json() as {
      materialType: 'plano-de-aula' | 'slides' | 'atividade' | 'avaliacao';
      formData: MaterialFormData;
    };

    console.log('üìã Generating material:', { materialType, formData });

    if (!openAIApiKey) {
      console.error('‚ùå OpenAI API key not configured');
      return new Response(JSON.stringify({ error: 'OpenAI API key not configured' }), {
        status: 500,
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
      });
    }

    // Generate the appropriate prompt based on material type
    const prompt = generatePrompt(materialType, formData);
    console.log('üéØ Generated prompt for', materialType);

    // Call OpenAI API
    const response = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${openAIApiKey}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        model: 'gpt-4o',
        messages: [
          {
            role: 'system',
            content: 'Voc√™ √© um assistente especializado em criar materiais educacionais seguindo a BNCC. Retorne sempre conte√∫do estruturado e pedag√≥gico com base nas diretrizes brasileiras de educa√ß√£o. Seja espec√≠fico e detalhado em todas as se√ß√µes, evitando campos vazios ou incompletos. GERE TODO O CONTE√öDO baseado no tema, disciplina e s√©rie informados - n√£o use templates gen√©ricos. Use portugu√™s brasileiro correto, sem erros de gram√°tica ou ortografia.'
          },
          {
            role: 'user',
            content: prompt
          }
        ],
        temperature: 0.7,
        max_tokens: 4000,
      }),
    });

    if (!response.ok) {
      console.error('‚ùå OpenAI API error:', response.status, response.statusText);
      const errorData = await response.text();
      console.error('Error details:', errorData);
      return new Response(JSON.stringify({ error: 'Failed to generate content' }), {
        status: 500,
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
      });
    }

    const data = await response.json();
    const generatedContent = data.choices[0].message.content;

    console.log('‚úÖ Content generated successfully');

    // Parse the generated content and structure it appropriately
    const structuredContent = parseGeneratedContent(materialType, generatedContent, formData);

    return new Response(JSON.stringify({
      success: true,
      content: structuredContent,
      materialType,
      formData
    }), {
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });

  } catch (error) {
    console.error('‚ùå Error in gerarMaterialIA function:', error);
    return new Response(JSON.stringify({ 
      error: 'Internal server error',
      details: error.message 
    }), {
      status: 500,
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });
  }
});

function generatePrompt(materialType: string, formData: MaterialFormData): string {
  const tema = formData.tema || formData.topic || '';
  const disciplina = formData.disciplina || formData.subject || '';
  const serie = formData.serie || formData.grade || '';
  const professor = formData.professor || '';
  const data = formData.data || '';
  const duracao = formData.duracao || '';

  switch (materialType) {
    case 'plano-de-aula':
      return `
Voc√™ √© um professor especialista em planejamento pedag√≥gico de acordo com a BNCC (Base Nacional Comum Curricular).

Crie um plano de aula COMPLETO e DETALHADO com base nas seguintes informa√ß√µes:
- TEMA DA AULA: ${tema}
- DISCIPLINA: ${disciplina}
- S√âRIE/ANO: ${serie}

IMPORTANTE: GERE TODO O CONTE√öDO baseado especificamente no tema "${tema}" para a disciplina de ${disciplina} na s√©rie ${serie}. N√ÉO use conte√∫do gen√©rico.

INSTRU√á√ïES CR√çTICAS PARA O PLANO DE AULA:

1. HABILIDADES BNCC:
   - Forne√ßa EXATAMENTE DE 1 A 4 habilidades que CORRESPONDAM AO ${tema} E O CONTE√öDO GERADO PARA O PLANO DE AULA
   - Cada habilidade deve ter c√≥digo REAL da BNCC (ex: EF03MA19, EF67LP28)
   - Os c√≥digos devem ser espec√≠ficos para O ${tema} da ${disciplina} e s√©rie ${serie}
   - Formato obrigat√≥rio: array de objetos com 'codigo' e 'descricao'
   - Descri√ß√µes devem ser claras e espec√≠ficas sobre os c√≥digos da BNCC GERADOS
   - S√≥ utilize c√≥digos e descri√ß√µes reais da BNCC, consultando obrigatoriamente a base oficial (https://basenacionalcomum.mec.gov.br/)
   - N√ÉO invente c√≥digos ou descri√ß√µes. Relacione o c√≥digo e a descri√ß√£o exatamente como consta na BNCC oficial
   - O c√≥digo deve ser espec√≠fico para o tema "${tema}", disciplina "${disciplina}" e s√©rie "${serie}"

2. DESENVOLVIMENTO DAS ETAPAS:
   - Cada etapa deve ter recursos √öNICOS e espec√≠ficos
   - N√ÉO repita recursos entre etapas diferentes
   - Use de 1 a 3 recursos por etapa
   - Recursos devem ser separados por v√≠rgula na string
   - Seja espec√≠fico: "Quadro branco, marcadores coloridos" (n√£o gen√©rico)

3. SE√á√ÉO RECURSOS:
   - Esta se√ß√£o deve consolidar TODOS os recursos das etapas
   - Extrair automaticamente de cada etapa do desenvolvimento
   - N√ÉO duplicar recursos j√° listados nas etapas
   - Organizar em lista clara e espec√≠fica

4. DURA√á√ÉO:
   - Calcule dura√ß√£o total baseada nos tempos das etapas
   - Seja realista para o tema e s√©rie
   - Sempre exiba a dura√ß√£o total no formato: "X minutos (Y aula(s))", considerando que cada aula tem 50 minutos. Exemplo: 50 minutos (1 Aula), 100 minutos (2 Aulas).

Retorne APENAS o JSON estruturado abaixo, preenchido com conte√∫do REAL e ESPEC√çFICO sobre "${tema}":

{
  "titulo": "Plano de Aula - ${tema}",
  "professor": "${professor}",
  "data": "${data}",
  "disciplina": "${disciplina}",
  "serie": "${serie}",
  "tema": "${tema}",
  "duracao": "[CALCULE dura√ß√£o total baseada nas etapas e exiba no formato: X minutos (Y aula(s)), considerando 50 minutos = 1 aula. Exemplo: 50 minutos (1 Aula), 100 minutos (2 Aulas)]",
  "habilidades": [
    {"codigo": "[C√ìDIGO BNCC REAL 1 - ex: EF03MA19]", "descricao": "[DESCRI√á√ÉO COMPLETA da habilidade 1 sobre ${tema}]"},
    {"codigo": "[C√ìDIGO BNCC REAL 2 - ex: EF03MA20]", "descricao": "[DESCRI√á√ÉO COMPLETA da habilidade 2 sobre ${tema}]"},
    {"codigo": "[C√ìDIGO BNCC REAL 3 - ex: EF03MA21]", "descricao": "[DESCRI√á√ÉO COMPLETA da habilidade 3 sobre ${tema}]"}
  ],
  "bncc": ["[C√ìDIGO 1]", "[C√ìDIGO 2]", "[C√ìDIGO 3]"],
  "objetivos": [
    "[OBJETIVO ESPEC√çFICO 1 sobre ${tema}]",
    "[OBJETIVO ESPEC√çFICO 2 sobre ${tema}]",
    "[OBJETIVO ESPEC√çFICO 3 sobre ${tema}]"
  ],
  "desenvolvimento": [
    { 
      "etapa": "Introdu√ß√£o", 
      "tempo": "[tempo em minutos - ex: 10 minutos]", 
      "atividade": "[ATIVIDADE ESPEC√çFICA de introdu√ß√£o ao ${tema} - detalhada]", 
      "recursos": "[1-3 recursos √∫nicos para introdu√ß√£o, separados por v√≠rgula]" 
    },
    { 
      "etapa": "Desenvolvimento", 
      "tempo": "[tempo em minutos - ex: 25 minutos]", 
      "atividade": "[ATIVIDADE ESPEC√çFICA de desenvolvimento do ${tema} - detalhada]", 
      "recursos": "[1-3 recursos √∫nicos para desenvolvimento, separados por v√≠rgula]" 
    },
    { 
      "etapa": "Pr√°tica", 
      "tempo": "[tempo em minutos - ex: 10 minutos]", 
      "atividade": "[ATIVIDADE PR√ÅTICA sobre ${tema} - detalhada]", 
      "recursos": "[1-3 recursos √∫nicos para pr√°tica, separados por v√≠rgula]" 
    },
    { 
      "etapa": "Fechamento", 
      "tempo": "[tempo em minutos - ex: 5 minutos]", 
      "atividade": "[ATIVIDADE de fechamento sobre ${tema} - detalhada]", 
      "recursos": "[1-2 recursos √∫nicos para fechamento, separados por v√≠rgula]" 
    }
  ],
  "recursos": [
    "[RECURSO 1 espec√≠fico para ${tema}]",
    "[RECURSO 2 espec√≠fico para ${tema}]",
    "[RECURSO 3 espec√≠fico para ${tema}]",
    "[RECURSO 4 espec√≠fico para ${tema}]",
    "[RECURSO 5 espec√≠fico para ${tema}]"
  ],
  "conteudosProgramaticos": [
    "[CONTE√öDO 1 sobre ${tema}]",
    "[CONTE√öDO 2 sobre ${tema}]",
    "[CONTE√öDO 3 sobre ${tema}]"
  ],
  "metodologia": "[METODOLOGIA ESPEC√çFICA para ensinar ${tema} em ${disciplina} para ${serie} - detalhada]",
  "avaliacao": "[M√âTODO DE AVALIA√á√ÉO espec√≠fico para ${tema} - como ser√° avaliado]",
  "referencias": [
    "[REFER√äNCIA 1 sobre ${tema} em ${disciplina}]",
    "[REFER√äNCIA 2 sobre ${tema} em ${disciplina}]"
  ]
}

REGRAS FINAIS OBRIGAT√ìRIAS:
1. Habilidades: SEMPRE array de objetos com codigo e descricao
2. BNCC: SEMPRE array apenas com os c√≥digos das habilidades
3. Recursos nas etapas: √öNICOS e espec√≠ficos, separados por v√≠rgula
4. Recursos gerais: lista consolidada de TODOS os recursos das etapas
5. C√≥digos BNCC devem ser REAIS e espec√≠ficos para ${disciplina} e ${serie}
6. N√ÉO repetir recursos entre etapas
7. Dura√ß√£o total deve ser soma dos tempos das etapas
`;

    case 'slides':
      return `
Voc√™ √© um professor especialista em cria√ß√£o de slides educativos seguindo a BNCC.

Crie slides educativos ESPEC√çFICOS sobre "${tema}" para ${disciplina} na ${serie}.

IMPORTANTE: TODO O CONTE√öDO deve ser baseado especificamente no tema "${tema}". N√ÉO use conte√∫do gen√©rico.

INSTRU√á√ïES CR√çTICAS PARA PROMPTS DE IMAGEM - OTIMIZADOS PARA OPEN-DALLE v1.1:
- Todos os prompts devem ser ULTRA-ESPEC√çFICOS, EXTREMAMENTE DETALHADOS e CONTEXTUALIZADOS ao tema "${tema}" em ${disciplina}
- Adapte o conte√∫do visual √† faixa et√°ria de ${serie} - use linguagem visual apropriada para a idade
- Inclua elementos do contexto brasileiro quando relevante (fauna, flora, geografia, cultura brasileira)
- Seja EXTREMAMENTE espec√≠fico sobre o que deve aparecer na imagem - descreva objetos, cen√°rios, cores, composi√ß√µes
- Use linguagem visual descritiva rica em detalhes: cores espec√≠ficas, texturas detalhadas, composi√ß√£o visual, estilo art√≠stico
- Especifique elementos concretos e tang√≠veis: objetos f√≠sicos, cen√°rios reais, pessoas, animais, plantas, elementos geom√©tricos, equipamentos
- NUNCA mencione texto, palavras, letras, n√∫meros ou s√≠mbolos - isso ser√° tratado automaticamente pelo sistema
- Foque em elementos visuais puros: formas, cores, objetos, cen√°rios, composi√ß√µes, materiais, texturas
- Para cada prompt, imagine que voc√™ est√° descrevendo uma cena para um artista que nunca viu o conceito antes
- Use pelo menos 3-4 caracter√≠sticas visuais espec√≠ficas em cada prompt (cor, forma, textura, composi√ß√£o)
- Inclua elementos de profundidade e composi√ß√£o visual (primeiro plano, segundo plano, fundo)

ESTRUTURA OBRIGAT√ìRIA:
- Slide 1: Capa com t√≠tulo e informa√ß√µes b√°sicas
- Slide 2: Objetivos da aula (4 objetivos espec√≠ficos)
- Slide 3: Introdu√ß√£o ao tema
- Slide 4: Conceito principal
- Slide 5: Desenvolvimento do Conte√∫do - Parte 1 (texto explicativo + imagem)
- Slide 6: Desenvolvimento do Conte√∫do - Parte 2 (texto explicativo + imagem)
- Slide 7: Desenvolvimento do Conte√∫do - Parte 3 (texto explicativo + imagem)
- Slide 8: Desenvolvimento do Conte√∫do - Parte 4 (texto explicativo + imagem)
- Slide 9: Exemplo Pr√°tico (exemplo concreto do tema + imagem)
- Slide 10: Tabela de dados/informa√ß√µes
- Slide 11: Atividade interativa
- Slide 12: Conclus√£o e pr√≥ximos passos

Retorne APENAS o JSON estruturado com todas as vari√°veis preenchidas especificamente sobre "${tema}":

{
  "titulo": "${tema} - ${disciplina}",
  "professor": "${professor}",
  "data": "${data}",
  "disciplina": "${disciplina}",
  "serie": "${serie}",
  "tema": "${tema}",
  "duracao": "[dura√ß√£o adequada para apresentar slides sobre ${tema}]",
  "bncc": "[c√≥digos BNCC relevantes para ${tema} em ${disciplina}]",
  "tema_imagem": "Ultra-detailed vibrant educational illustration showcasing the core concept of ${tema} in Brazilian ${disciplina} context for ${serie} students. Rich colorful composition featuring [DESCREVA ESPECIFICAMENTE 4-5 elementos visuais √∫nicos relacionados ao tema com cores, formas, texturas e posicionamento detalhados]. Professional Brazilian educational artwork with bright engaging colors, clean modern design, high-quality detailed visual elements, perfect lighting and depth",
  "slide_1_titulo": "${tema}",
  "slide_1_subtitulo": "Aula de ${disciplina} - ${serie}",
  "objetivo_1": "[OBJETIVO 1 espec√≠fico sobre ${tema}]",
  "objetivo_2": "[OBJETIVO 2 espec√≠fico sobre ${tema}]",
  "objetivo_3": "[OBJETIVO 3 espec√≠fico sobre ${tema}]",
  "objetivo_4": "[OBJETIVO 4 espec√≠fico sobre ${tema}]",
  "introducao_texto": "[INTRODU√á√ÉO espec√≠fica sobre ${tema} - explica√ß√£o clara do que ser√° aprendido]",
  "introducao_imagem": "Captivating introductory scene about ${tema} in Brazilian ${disciplina} education for ${serie}. Detailed composition showing [DESCREVA especificamente 3-4 elementos que introduzem o tema visualmente com cores, posi√ß√µes, texturas e materiais]. Warm inviting colors, engaging educational atmosphere, professional artwork with depth and visual interest, modern Brazilian pedagogical style",
  "conceitos_texto": "[CONCEITOS fundamentais espec√≠ficos sobre ${tema} - defini√ß√£o clara e did√°tica]",
  "conceito_principal": "[CONCEITO principal de ${tema} - defini√ß√£o concisa e precisa]",
  "conceitos_imagem": "Professional educational infographic-style illustration demonstrating key concepts of ${tema} for Brazilian ${disciplina} in ${serie}. Sophisticated visual representation featuring [DESCREVA os conceitos espec√≠ficos visualmente com objetos concretos, cores vibrantes, formas geom√©tricas, materiais e texturas]. Clean infographic design with bright Brazilian educational colors, clear visual hierarchy, engaging modern layout with excellent contrast and readability",
  "desenvolvimento_1_titulo": "[T√çTULO do primeiro aspecto do desenvolvimento de ${tema}]",
  "desenvolvimento_1_texto": "[EXPLICA√á√ÉO detalhada do primeiro aspecto importante de ${tema} - texto did√°tico e claro]",
  "desenvolvimento_1_imagem": "Extremely detailed educational artwork showcasing the first critical aspect of ${tema} in Brazilian ${disciplina} context. Rich visual composition illustrating [DESCREVA especificamente o primeiro aspecto com 4-5 elementos visuais √∫nicos: objetos espec√≠ficos, cen√°rios detalhados, cores precisas, texturas, materiais, posicionamento]. Professional high-quality educational illustration with vibrant colors, perfect for ${serie} students, Brazilian educational excellence, exceptional visual depth and clarity",
  "desenvolvimento_2_titulo": "[T√çTULO do segundo aspecto do desenvolvimento de ${tema}]",
  "desenvolvimento_2_texto": "[EXPLICA√á√ÉO detalhada do segundo aspecto importante de ${tema} - texto did√°tico e claro]",
  "desenvolvimento_2_imagem": "Comprehensive ultra-detailed visual representation of the second key aspect of ${tema} in Brazilian ${disciplina} education. Sophisticated composition featuring [DESCREVA especificamente o segundo aspecto com elementos visuais √∫nicos: equipamentos, materiais, cen√°rios, pessoas, objetos, cores espec√≠ficas, texturas, ilumina√ß√£o]. Rich educational artwork with engaging colors, perfectly suited for ${serie} students, Brazilian cultural context, professional quality with outstanding visual appeal",
  "desenvolvimento_3_titulo": "[T√çTULO do terceiro aspecto do desenvolvimento de ${tema}]",
  "desenvolvimento_3_texto": "[EXPLICA√á√ÉO detalhada do terceiro aspecto importante de ${tema} - texto did√°tico e claro]",
  "desenvolvimento_3_imagem": "Masterful educational illustration depicting the third essential element of ${tema} in Brazilian ${disciplina} curriculum. Detailed visual showcase featuring [DESCREVA especificamente o terceiro aspecto com elementos concretos: objetos f√≠sicos, cen√°rios reais, materiais espec√≠ficos, cores vibrantes, texturas, composi√ß√£o visual]. Colorful educational design perfectly adapted for ${serie}, Brazilian educational methodology, high-quality artistic execution with remarkable detail and visual storytelling",
  "desenvolvimento_4_titulo": "[T√çTULO do quarto aspecto do desenvolvimento de ${tema}]",
  "desenvolvimento_4_texto": "[EXPLICA√á√ÉO detalhada do quarto aspecto importante de ${tema} - texto did√°tico e claro]",
  "desenvolvimento_4_imagem": "Professional ultra-detailed educational artwork illustrating the fourth key component of ${tema} for Brazilian ${disciplina}. Exceptional visual composition demonstrating [DESCREVA especificamente o quarto aspecto com elementos visuais ricos: materiais did√°ticos, equipamentos, cen√°rios educacionais, cores espec√≠ficas, texturas, profundidade visual]. Vibrant educational illustration with outstanding design for ${serie}, Brazilian pedagogical style, detailed artistic composition with perfect educational clarity and visual impact",
  "exemplo_titulo": "[T√çTULO do exemplo pr√°tico de ${tema}]",
  "exemplo_conteudo": "[EXEMPLO PR√ÅTICO concreto e espec√≠fico sobre ${tema} - situa√ß√£o real onde o tema se aplica]",
  "exemplo_imagem": "Realistic ultra-detailed educational scene showing practical application of ${tema} in authentic Brazilian context for ${disciplina}. Vivid composition depicting [DESCREVA especificamente o exemplo pr√°tico com cen√°rio completo: ambiente, pessoas, objetos, a√ß√µes, materiais, cores, texturas, ilumina√ß√£o natural]. High-quality realistic illustration with Brazilian setting, educational purpose perfectly aligned with ${serie}, engaging visual storytelling, professional artwork with exceptional realism and educational value",
  "tabela_titulo": "[T√çTULO de tabela espec√≠fica sobre ${tema}]",
  "coluna_1": "[cabe√ßalho coluna 1 sobre ${tema}]",
  "coluna_2": "[cabe√ßalho coluna 2 sobre ${tema}]",
  "coluna_3": "[cabe√ßalho coluna 3 sobre ${tema}]",
  "linha_1_col_1": "[dado espec√≠fico de ${tema}]",
  "linha_1_col_2": "[dado espec√≠fico de ${tema}]",
  "linha_1_col_3": "[dado espec√≠fico de ${tema}]",
  "linha_2_col_1": "[dado espec√≠fico de ${tema}]",
  "linha_2_col_2": "[dado espec√≠fico de ${tema}]",
  "linha_2_col_3": "[dado espec√≠fico de ${tema}]",
  "linha_3_col_1": "[dado espec√≠fico de ${tema}]",
  "linha_3_col_2": "[dado espec√≠fico de ${tema}]",
  "linha_3_col_3": "[dado espec√≠fico de ${tema}]",
  "atividade_pergunta": "[PERGUNTA espec√≠fica sobre ${tema}]",
  "opcao_a": "[alternativa A sobre ${tema}]",
  "opcao_b": "[alternativa B sobre ${tema}]",
  "opcao_c": "[alternativa C sobre ${tema}]",
  "opcao_d": "[alternativa D sobre ${tema}]",
  "conclusao_texto": "[S√çNTESE dos pontos principais sobre ${tema}]",
  "ponto_chave_1": "[PONTO-CHAVE 1 para memorizar sobre ${tema}]",
  "ponto_chave_2": "[PONTO-CHAVE 2 para memorizar sobre ${tema}]",
  "proximo_passo_1": "[PASSO 1 para continuar estudando ${tema}]",
  "proximo_passo_2": "[PASSO 2 para continuar estudando ${tema}]",
  "proximo_passo_3": "[PASSO 3 para continuar estudando ${tema}]"
}

REGRAS FINAIS PARA PROMPTS DE IMAGEM OTIMIZADOS PARA OPEN-DALLE v1.1:
1. Cada prompt deve ser √∫nico, espec√≠fico e ULTRA-DETALHADO com pelo menos 4-5 caracter√≠sticas visuais espec√≠ficas
2. Use vocabul√°rio visual extremamente rico: cores espec√≠ficas (azul royal, verde esmeralda), texturas detalhadas (madeira polida, metal brilhante), composi√ß√µes elaboradas, estilos art√≠sticos precisos
3. Adapte a complexidade visual √† faixa et√°ria de ${serie} - seja espec√≠fico sobre elementos apropriados para a idade
4. Inclua contexto brasileiro quando educacionalmente relevante: fauna espec√≠fica (araras, tucanos), flora (ip√™s, palmeiras), geografia (cerrado, mata atl√¢ntica), elementos culturais
5. Seja extremamente espec√≠fico sobre elementos visuais: objetos f√≠sicos concretos, cen√°rios detalhados, pessoas em a√ß√µes espec√≠ficas, elementos naturais precisos
6. Use descri√ß√µes que evoquem qualidade art√≠stica excepcional: "high quality", "professional artwork", "detailed composition", "exceptional visual clarity", "outstanding detail"
7. Especifique o estilo educacional brasileiro: "Brazilian educational excellence", "pedagogical approach", "cultural context"
8. Garanta que cada prompt tenha prop√≥sito pedag√≥gico espec√≠fico e claro, com elementos visuais que apoiem diretamente o aprendizado
9. Inclua elementos de profundidade visual: primeiro plano, segundo plano, fundo, perspectiva, ilumina√ß√£o
10. Descreva materiais e texturas espec√≠ficas: papel, madeira, metal, tecido, pl√°stico, vidro, pedra, etc.

GERE conte√∫do REAL e ESPEC√çFICO sobre "${tema}". Adapte √† faixa et√°ria de ${serie}. Use portugu√™s brasileiro correto.
`;

    case 'atividade':
      const numQuestoes = formData.numeroQuestoes || formData.quantidadeQuestoes || 10;
      let tiposQuestoes: string[] = [];
      if (formData.tipoQuestoes === 'aberta') {
        tiposQuestoes = ['dissertativa', 'completar', 'desenho'];
      } else if (formData.tipoQuestoes === 'fechada') {
        tiposQuestoes = ['multipla_escolha', 'verdadeiro_falso', 'ligar'];
      } else if (formData.tipoQuestoes === 'mista') {
        tiposQuestoes = ['multipla_escolha', 'verdadeiro_falso', 'ligar', 'completar', 'dissertativa', 'desenho'];
      } else if (formData.tiposQuestoes && Array.isArray(formData.tiposQuestoes)) {
        tiposQuestoes = formData.tiposQuestoes;
      } else {
        tiposQuestoes = ['multipla_escolha', 'verdadeiro_falso', 'completar'];
      }

      return `
Voc√™ √© um professor especialista em criar ATIVIDADES DE APRENDIZAGEM ATIVA seguindo a BNCC.

Crie uma ATIVIDADE EDUCATIVA INTERATIVA sobre "${tema}" para ${disciplina} na ${serie}.

IMPORTANTE: Este √© um material de ATIVIDADE PR√ÅTICA focado em APRENDIZAGEM ATIVA, n√£o uma avalia√ß√£o formal. 
O objetivo √© ENVOLVER os alunos em pr√°ticas educativas din√¢micas e participativas sobre "${tema}".

CARACTER√çSTICAS DE UMA ATIVIDADE (n√£o avalia√ß√£o):
- Foco no PROCESSO DE APRENDIZAGEM, n√£o na verifica√ß√£o
- Exerc√≠cios PR√ÅTICOS e INTERATIVOS
- Ambiente de COLABORA√á√ÉO e DESCOBERTA
- Feedback FORMATIVO e CONSTRUTIVO
- Est√≠mulo √† PARTICIPA√á√ÉO ATIVA dos estudantes
- Desenvolvimento de HABILIDADES atrav√©s da pr√°tica

TIPOS DE QUEST√ïES SOLICITADOS: ${tiposQuestoes.join(', ')}
N√öMERO DE QUEST√ïES: ${numQuestoes}

OBRIGAT√ìRIO - TIPOS DE QUEST√ïES DISPON√çVEIS:
1. "multipla_escolha" - 4 alternativas (A, B, C, D) com apenas uma correta
2. "verdadeiro_falso" - Afirma√ß√£o para marcar V ou F
3. "completar" - Frase com lacuna para completar
4. "ligar" - Conectar itens da coluna A com itens da coluna B
5. "dissertativa" - Pergunta aberta para resposta por extenso
6. "desenho" - Solicita desenho ou esquema como resposta

REGRAS CR√çTICAS PARA GERA√á√ÉO DAS QUEST√ïES:
- Distribua os tipos de quest√µes de forma EQUILIBRADA conforme solicitado
- Para quest√µes "multipla_escolha": sempre 4 alternativas v√°lidas e plaus√≠veis
- Para quest√µes "ligar": forne√ßa exatamente 4 itens na coluna A e 4 na coluna B
- Para quest√µes "completar": deixe uma lacuna clara marcada com ______
- Para quest√µes "verdadeiro_falso": crie afirma√ß√µes que exijam an√°lise
- Para quest√µes "dissertativa": fa√ßa perguntas que promovam reflex√£o
- Para quest√µes "desenho": solicite representa√ß√µes visuais pedag√≥gicas

Retorne APENAS o JSON estruturado com conte√∫do ESPEC√çFICO sobre "${tema}":

{
  "titulo": "Atividade Pr√°tica - ${tema}",
  "professor": "${professor}",
  "data": "${data}",
  "disciplina": "${disciplina}",
  "serie": "${serie}",
  "tema": "${tema}",
  "tipo_material": "atividade",
  "duracao": "[dura√ß√£o adequada para a atividade pr√°tica sobre ${tema}]",
  "bncc": "[c√≥digos BNCC espec√≠ficos para ${tema} em ${disciplina}]",
  "objetivo_geral": "[OBJETIVO EDUCATIVO da atividade pr√°tica sobre ${tema} - foco no processo de aprendizagem]",
  "objetivos_especificos": [
    "[OBJETIVO ESPEC√çFICO 1 da atividade sobre ${tema}]",
    "[OBJETIVO ESPEC√çFICO 2 da atividade sobre ${tema}]",
    "[OBJETIVO ESPEC√çFICO 3 da atividade sobre ${tema}]"
  ],
  "introducao": "[INTRODU√á√ÉO motivadora para a atividade sobre ${tema} - explicar o prop√≥sito da pr√°tica]",
  "instrucoes": "[INSTRU√á√ïES CLARAS de como realizar a atividade sobre ${tema} - passo a passo]",
  "questoes": [
    ${Array.from({length: numQuestoes}, (_, i) => {
      const tipoIndex = i % tiposQuestoes.length;
      const tipo = tiposQuestoes[tipoIndex];
      let tipoFinal = tipo;
      
      // Mapear tipos para os aceitos pelo sistema
      if (tipo === 'multipla-escolha') tipoFinal = 'multipla_escolha';
      if (tipo === 'verdadeiro-falso') tipoFinal = 'verdadeiro_falso';
      if (tipo === 'completar-lacunas') tipoFinal = 'completar';
      
      return `{
      "numero": ${i + 1},
      "tipo": "${tipoFinal}",
      "enunciado": "[ENUNCIADO da quest√£o ${i + 1} sobre ${tema} - adaptado para tipo ${tipoFinal}]",
      ${tipoFinal === 'multipla_escolha' ? `"opcoes": [
        "[ALTERNATIVA A - plaus√≠vel e relacionada ao tema]",
        "[ALTERNATIVA B - plaus√≠vel e relacionada ao tema]", 
        "[ALTERNATIVA C - plaus√≠vel e relacionada ao tema]",
        "[ALTERNATIVA D - plaus√≠vel e relacionada ao tema]"
      ],` : tipoFinal === 'ligar' ? `"coluna_a": [
        "[ITEM A1 - conceito/termo sobre ${tema}]",
        "[ITEM A2 - conceito/termo sobre ${tema}]",
        "[ITEM A3 - conceito/termo sobre ${tema}]",
        "[ITEM A4 - conceito/termo sobre ${tema}]"
      ],
      "coluna_b": [
        "[ITEM B1 - defini√ß√£o/descri√ß√£o sobre ${tema}]",
        "[ITEM B2 - defini√ß√£o/descri√ß√£o sobre ${tema}]",
        "[ITEM B3 - defini√ß√£o/descri√ß√£o sobre ${tema}]",
        "[ITEM B4 - defini√ß√£o/descri√ß√£o sobre ${tema}]"
      ],` : `"opcoes": [],`}
      "resposta_correta": "[RESPOSTA CORRETA ou orienta√ß√£o detalhada]",
      "explicacao": "[EXPLICA√á√ÉO EDUCATIVA sobre ${tema} - feedback formativo]",
      "dica_pedagogica": "[DICA para o professor sobre esta quest√£o]"
    }`;
    }).join(',\n    ')}
  ],
  "recursos_necessarios": [
    "[RECURSO 1 para realizar a atividade sobre ${tema}]",
    "[RECURSO 2 para realizar a atividade sobre ${tema}]",
    "[RECURSO 3 para realizar a atividade sobre ${tema}]"
  ],
  "metodologia": "[METODOLOGIA da atividade - como conduzir a pr√°tica sobre ${tema}]",
  "criterios_acompanhamento": [
    "[CRIT√âRIO 1 para acompanhar o desenvolvimento dos alunos]",
    "[CRIT√âRIO 2 para acompanhar o desenvolvimento dos alunos]",
    "[CRIT√âRIO 3 para acompanhar o desenvolvimento dos alunos]"
  ],
  "sugestoes_adaptacao": "[SUGEST√ïES para adaptar a atividade a diferentes n√≠veis de aprendizagem]",
  "extensao_atividade": "[SUGEST√ïES para estender ou aprofundar a atividade sobre ${tema}]",
  "referencias": [
    "[REFER√äNCIA 1 sobre ${tema} em ${disciplina}]",
    "[REFER√äNCIA 2 sobre ${tema} em ${disciplina}]"
  ]
}

INSTRU√á√ïES FINAIS CR√çTICAS:
1. DISTRIBUA os tipos de quest√µes EQUILIBRADAMENTE entre os tipos solicitados
2. Para "multipla_escolha": sempre 4 alternativas v√°lidas e plaus√≠veis
3. Para "ligar": exatamente 4 itens em cada coluna com correspond√™ncias claras
4. Para "completar": use lacunas claras marcadas com ______
5. Para "verdadeiro_falso": crie afirma√ß√µes que exijam an√°lise cr√≠tica
6. FOQUE em atividades PR√ÅTICAS e INTERATIVAS
7. Use linguagem MOTIVADORA e ENVOLVENTE
8. Promova PARTICIPA√á√ÉO ATIVA dos estudantes
9. Adapte √† faixa et√°ria de ${serie}
10. Use portugu√™s brasileiro correto
`;

    case 'avaliacao':
      const numQuestoesAval = formData.numeroQuestoes || formData.quantidadeQuestoes || 10;
      let tiposQuestoesAval: string[] = [];
      if (formData.tipoQuestoes === 'aberta') {
        tiposQuestoesAval = ['dissertativa', 'completar', 'desenho'];
      } else if (formData.tipoQuestoes === 'fechada') {
        tiposQuestoesAval = ['multipla_escolha', 'verdadeiro_falso', 'ligar'];
      } else if (formData.tipoQuestoes === 'mista') {
        tiposQuestoesAval = ['multipla_escolha', 'verdadeiro_falso', 'ligar', 'completar', 'dissertativa', 'desenho'];
      } else if (formData.tiposQuestoes && Array.isArray(formData.tiposQuestoes)) {
        tiposQuestoesAval = formData.tiposQuestoes;
      } else {
        tiposQuestoesAval = ['multipla_escolha', 'verdadeiro_falso', 'dissertativa'];
      }

      return `
Voc√™ √© um professor especialista em criar AVALIA√á√ïES FORMAIS seguindo a BNCC.

Crie uma AVALIA√á√ÉO ESTRUTURADA sobre "${tema}" para ${disciplina} na ${serie}.

IMPORTANTE: Este √© um material de AVALIA√á√ÉO FORMAL focado na VERIFICA√á√ÉO DE APRENDIZAGEM sobre "${tema}".
O objetivo √© MENSURAR o conhecimento adquirido pelos alunos de forma objetiva e criteriosa.

CARACTER√çSTICAS DE UMA AVALIA√á√ÉO (n√£o atividade):
- Foco na VERIFICA√á√ÉO DO APRENDIZADO
- Quest√µes OBJETIVAS e MENSUR√ÅVEIS  
- Crit√©rios CLAROS de corre√ß√£o
- Ambiente FORMAL de teste
- Feedback AVALIATIVO e CLASSIFICAT√ìRIO
- Verifica√ß√£o do DOM√çNIO dos conte√∫dos
- Instrumentos de MEDI√á√ÉO do conhecimento

TIPOS DE QUEST√ïES SOLICITADOS: ${tiposQuestoesAval.join(', ')}
N√öMERO DE QUEST√ïES: ${numQuestoesAval}

OBRIGAT√ìRIO - TIPOS DE QUEST√ïES DISPON√çVEIS:
1. "multipla_escolha" - 4 alternativas (A, B, C, D) com apenas uma correta
2. "verdadeiro_falso" - Afirma√ß√£o para marcar V ou F
3. "completar" - Frase com lacuna para completar
4. "ligar" - Conectar itens da coluna A com itens da coluna B
5. "dissertativa" - Pergunta aberta para resposta por extenso
6. "desenho" - Solicita desenho ou esquema como resposta

REGRAS CR√çTICAS PARA GERA√á√ÉO DAS QUEST√ïES:
- Distribua os tipos de quest√µes de forma EQUILIBRADA conforme solicitado
- Para quest√µes "multipla_escolha": sempre 4 alternativas v√°lidas e plaus√≠veis
- Para quest√µes "ligar": forne√ßa exatamente 4 itens na coluna A e 4 na coluna B
- Para quest√µes "completar": deixe uma lacuna clara marcada com ______
- Para quest√µes "verdadeiro_falso": crie afirma√ß√µes que exijam an√°lise
- Para quest√µes "dissertativa": fa√ßa perguntas que promovam an√°lise cr√≠tica
- Para quest√µes "desenho": solicite representa√ß√µes visuais t√©cnicas

Retorne APENAS o JSON estruturado com conte√∫do ESPEC√çFICO sobre "${tema}":

{
  "titulo": "Avalia√ß√£o - ${tema}",
  "professor": "${professor}",
  "data": "${data}",
  "disciplina": "${disciplina}",
  "serie": "${serie}",
  "tema": "${tema}",
  "tipo_material": "avaliacao",
  "duracao": "[dura√ß√£o adequada para a avalia√ß√£o sobre ${tema}]",
  "valor_total": "[PONTUA√á√ÉO TOTAL da avalia√ß√£o - ex: 10,0 pontos]",
  "bncc": "[c√≥digos BNCC espec√≠ficos para ${tema} em ${disciplina}]",
  "objetivo_avaliativo": "[OBJETIVO da avalia√ß√£o - verificar aprendizagem sobre ${tema}]",
  "competencias_avaliadas": [
    "[COMPET√äNCIA 1 avaliada sobre ${tema}]",
    "[COMPET√äNCIA 2 avaliada sobre ${tema}]",
    "[COMPET√äNCIA 3 avaliada sobre ${tema}]"
  ],
  "instrucoes_gerais": "[INSTRU√á√ïES FORMAIS para realiza√ß√£o da avalia√ß√£o sobre ${tema}]",
  "questoes": [
    ${Array.from({length: numQuestoesAval}, (_, i) => {
      const tipoIndex = i % tiposQuestoesAval.length;
      const tipo = tiposQuestoesAval[tipoIndex];
      let tipoFinal = tipo;
      
      // Mapear tipos para os aceitos pelo sistema
      if (tipo === 'multipla-escolha') tipoFinal = 'multipla_escolha';
      if (tipo === 'verdadeiro-falso') tipoFinal = 'verdadeiro_falso';
      if (tipo === 'completar-lacunas') tipoFinal = 'completar';
      
      return `{
      "numero": ${i + 1},
      "tipo": "${tipoFinal}",
      "valor": "[PONTUA√á√ÉO da quest√£o ${i + 1} - ex: 1,0 ponto]",
      "enunciado": "[ENUNCIADO da quest√£o ${i + 1} sobre ${tema} - claro e objetivo para tipo ${tipoFinal}]",
      ${tipoFinal === 'multipla_escolha' ? `"opcoes": [
        "[ALTERNATIVA A - tecnicamente correta ou incorreta]",
        "[ALTERNATIVA B - tecnicamente correta ou incorreta]", 
        "[ALTERNATIVA C - tecnicamente correta ou incorreta]",
        "[ALTERNATIVA D - tecnicamente correta ou incorreta]"
      ],` : tipoFinal === 'ligar' ? `"coluna_a": [
        "[ITEM A1 - conceito/termo sobre ${tema}]",
        "[ITEM A2 - conceito/termo sobre ${tema}]",
        "[ITEM A3 - conceito/termo sobre ${tema}]",
        "[ITEM A4 - conceito/termo sobre ${tema}]"
      ],
      "coluna_b": [
        "[ITEM B1 - defini√ß√£o/descri√ß√£o sobre ${tema}]",
        "[ITEM B2 - defini√ß√£o/descri√ß√£o sobre ${tema}]",
        "[ITEM B3 - defini√ß√£o/descri√ß√£o sobre ${tema}]",
        "[ITEM B4 - defini√ß√£o/descri√ß√£o sobre ${tema}]"
      ],` : `"opcoes": [],`}
      "resposta_correta": "[RESPOSTA CORRETA]",
      "criterios_correcao": "[CRIT√âRIOS para corre√ß√£o desta quest√£o]",
      "habilidade_avaliada": "[HABILIDADE BNCC avaliada nesta quest√£o]"
    }`;
    }).join(',\n    ')}
  ],
  "criterios_avaliacao": {
    "excelente": "[CRIT√âRIO para conceito EXCELENTE (90-100%)]",
    "bom": "[CRIT√âRIO para conceito BOM (70-89%)]",
    "satisfatorio": "[CRIT√âRIO para conceito SATISFAT√ìRIO (50-69%)]",
    "insuficiente": "[CRIT√âRIO para conceito INSUFICIENTE (0-49%)]"
  },
  "rubrica_avaliacao": [
    {
      "aspecto": "[ASPECTO 1 avaliado sobre ${tema}]",
      "criterio": "[CRIT√âRIO de avalia√ß√£o para este aspecto]",
      "pontuacao": "[PONTUA√á√ÉO para este aspecto]"
    },
    {
      "aspecto": "[ASPECTO 2 avaliado sobre ${tema}]", 
      "criterio": "[CRIT√âRIO de avalia√ß√£o para este aspecto]",
      "pontuacao": "[PONTUA√á√ÉO para este aspecto]"
    },
    {
      "aspecto": "[ASPECTO 3 avaliado sobre ${tema}]",
      "criterio": "[CRIT√âRIO de avalia√ß√£o para este aspecto]", 
      "pontuacao": "[PONTUA√á√ÉO para este aspecto]"
    }
  ],
  "observacoes_correcao": "[ORIENTA√á√ïES para corre√ß√£o da avalia√ß√£o sobre ${tema}]",
  "feedback_pos_avaliacao": "[ORIENTA√á√ïES para feedback ap√≥s corre√ß√£o]",
  "referencias": [
    "[REFER√äNCIA 1 sobre ${tema} em ${disciplina}]",
    "[REFER√äNCIA 2 sobre ${tema} em ${disciplina}]"
  ]
}

INSTRU√á√ïES FINAIS CR√çTICAS:
1. DISTRIBUA os tipos de quest√µes EQUILIBRADAMENTE entre os tipos solicitados
2. Para "multipla_escolha": sempre 4 alternativas v√°lidas e plaus√≠veis
3. Para "ligar": exatamente 4 itens em cada coluna com correspond√™ncias verific√°veis
4. Para "completar": use lacunas claras marcadas com ______
5. Para "verdadeiro_falso": crie afirma√ß√µes que exijam conhecimento espec√≠fico
6. FOQUE na VERIFICA√á√ÉO OBJETIVA do aprendizado
7. Use linguagem FORMAL e CLARA
8. Estabele√ßa CRIT√âRIOS MENSUR√ÅVEIS de avalia√ß√£o
9. Inclua RUBRICAS E PONTUA√á√ïES espec√≠ficas
10. Adapte √† faixa et√°ria de ${serie}
11. Use portugu√™s brasileiro correto
`;

    default:
      return `Gere um material educativo sobre ${tema} para ${disciplina} na ${serie}.`;
  }
}

function parseGeneratedContent(materialType: string, content: string, formData: MaterialFormData) {
  try {
    // Try to parse as JSON first
    const jsonMatch = content.match(/\{[\s\S]*\}/);
    if (jsonMatch) {
      const parsedContent = JSON.parse(jsonMatch[0]);
      
      // --- CORRE√á√ÉO ESPECIAL PARA PLANO DE AULA ---
      if (materialType === 'plano-de-aula') {
        // 1. Garantir que habilidades seja array de objetos com codigo e descricao
        if (Array.isArray(parsedContent.habilidades)) {
          parsedContent.habilidades = parsedContent.habilidades.map((h: any) => {
            if (typeof h === 'object' && h.codigo && h.descricao) {
              return h;
            } else if (typeof h === 'string') {
              // Tentar separar c√≥digo e descri√ß√£o se estiver em string
              const match = h.match(/([A-Z]{2}\d{2}[A-Z]{2}\d{2,})\s*[-:]?\s*(.*)/);
              if (match) {
                return { codigo: match[1], descricao: match[2] };
              }
              return { codigo: '', descricao: h };
            }
            return { codigo: '', descricao: '' };
          });
        } else {
          parsedContent.habilidades = [];
        }

        // 2. Garantir que bncc seja array apenas com c√≥digos das habilidades
        parsedContent.bncc = Array.isArray(parsedContent.habilidades)
          ? parsedContent.habilidades.map((h: any) => h.codigo).filter((c: string) => !!c)
          : [];

        // 3. Extrair recursos das etapas e consolidar na se√ß√£o recursos
        if (parsedContent.desenvolvimento && Array.isArray(parsedContent.desenvolvimento)) {
          const recursosEtapas = new Set<string>();
          
          parsedContent.desenvolvimento.forEach((etapa: any) => {
            if (etapa.recursos && typeof etapa.recursos === 'string') {
              // Dividir recursos por v√≠rgula e limpar espa√ßos
              const recursos = etapa.recursos.split(',').map((r: string) => r.trim()).filter((r: string) => r.length > 0);
              recursos.forEach((recurso: string) => recursosEtapas.add(recurso));
            }
          });

          // Atualizar a se√ß√£o recursos com todos os recursos das etapas
          parsedContent.recursos = Array.from(recursosEtapas);
        }

        // 4. Calcular dura√ß√£o total baseada nas etapas
        if (parsedContent.desenvolvimento && Array.isArray(parsedContent.desenvolvimento)) {
          let tempoTotal = 0;
          parsedContent.desenvolvimento.forEach((etapa: any) => {
            if (etapa.tempo && typeof etapa.tempo === 'string') {
              const match = etapa.tempo.match(/(\d+)/);
              if (match) {
                tempoTotal += parseInt(match[1]);
              }
            }
          });
          
          if (tempoTotal > 0) {
            parsedContent.duracao = tempoTotal >= 100 
              ? `${Math.ceil(tempoTotal / 50)} aulas (${tempoTotal} minutos)`
              : `${tempoTotal} minutos`;
          }
        }
      }
      // --- FIM CORRE√á√ÉO PLANO DE AULA ---
      
      // Enhanced parsing for activities and assessments with better question handling
      if (materialType === 'atividade' || materialType === 'avaliacao') {
        if (parsedContent.questoes && Array.isArray(parsedContent.questoes)) {
          parsedContent.questoes = parsedContent.questoes.map((questao: any, index: number) => {
            // Ensure proper question structure
            const pergunta = questao.pergunta || questao.enunciado || `Quest√£o ${index + 1}`;
            const enunciado = questao.enunciado || questao.pergunta || pergunta;
            let processedQuestion: any = {
              numero: questao.numero || (index + 1),
              tipo: questao.tipo || 'multipla_escolha',
              pergunta, // sempre preenchido
              enunciado, // sempre preenchido
              resposta_correta: questao.resposta_correta || '',
              explicacao: questao.explicacao || '',
              dica_pedagogica: questao.dica_pedagogica || '',
              ...(materialType === 'avaliacao' && {
                valor: questao.valor || '1,0 ponto',
                criterios_correcao: questao.criterios_correcao || '',
                habilidade_avaliada: questao.habilidade_avaliada || ''
              })
            };

            switch (processedQuestion.tipo) {
              case 'multipla_escolha':
                processedQuestion.opcoes = Array.isArray(questao.opcoes) && questao.opcoes.length === 4 ? questao.opcoes : [
                  'Alternativa A - aguardando conte√∫do',
                  'Alternativa B - aguardando conte√∫do',
                  'Alternativa C - aguardando conte√∫do',
                  'Alternativa D - aguardando conte√∫do'
                ];
                processedQuestion.coluna_a = [];
                processedQuestion.coluna_b = [];
                processedQuestion.colunaA = [];
                processedQuestion.colunaB = [];
                processedQuestion.textoComLacunas = '';
                processedQuestion.linhasResposta = undefined;
                break;
              case 'ligar':
                processedQuestion.coluna_a = Array.isArray(questao.coluna_a) && questao.coluna_a.length === 4 ? questao.coluna_a : ['Item A1', 'Item A2', 'Item A3', 'Item A4'];
                processedQuestion.coluna_b = Array.isArray(questao.coluna_b) && questao.coluna_b.length === 4 ? questao.coluna_b : ['Item B1', 'Item B2', 'Item B3', 'Item B4'];
                processedQuestion.colunaA = processedQuestion.coluna_a;
                processedQuestion.colunaB = processedQuestion.coluna_b;
                processedQuestion.opcoes = [];
                processedQuestion.textoComLacunas = '';
                processedQuestion.linhasResposta = undefined;
                break;
              case 'completar':
                processedQuestion.textoComLacunas = questao.textoComLacunas || '';
                processedQuestion.opcoes = [];
                processedQuestion.coluna_a = [];
                processedQuestion.coluna_b = [];
                processedQuestion.colunaA = [];
                processedQuestion.colunaB = [];
                processedQuestion.linhasResposta = undefined;
                break;
              case 'dissertativa':
              case 'desenho':
                processedQuestion.linhasResposta = questao.linhasResposta || 5;
                processedQuestion.opcoes = [];
                processedQuestion.coluna_a = [];
                processedQuestion.coluna_b = [];
                processedQuestion.colunaA = [];
                processedQuestion.colunaB = [];
                processedQuestion.textoComLacunas = '';
                break;
              case 'verdadeiro_falso':
                processedQuestion.opcoes = ['Verdadeiro', 'Falso'];
                processedQuestion.coluna_a = [];
                processedQuestion.coluna_b = [];
                processedQuestion.colunaA = [];
                processedQuestion.colunaB = [];
                processedQuestion.textoComLacunas = '';
                processedQuestion.linhasResposta = undefined;
                break;
              default:
                // fallback para m√∫ltipla escolha
                processedQuestion.opcoes = [
                  'Alternativa A - aguardando conte√∫do',
                  'Alternativa B - aguardando conte√∫do',
                  'Alternativa C - aguardando conte√∫do',
                  'Alternativa D - aguardando conte√∫do'
                ];
                processedQuestion.coluna_a = [];
                processedQuestion.coluna_b = [];
                processedQuestion.colunaA = [];
                processedQuestion.colunaB = [];
                processedQuestion.textoComLacunas = '';
                processedQuestion.linhasResposta = undefined;
                break;
            }

            return processedQuestion;
          });
        }
      }
      
      return parsedContent;
    }
    
    // If not JSON, return structured content based on material type
    return {
      titulo: `${materialType.charAt(0).toUpperCase() + materialType.slice(1)} - ${formData.tema || formData.topic || 'Material Educativo'}`,
      conteudo: content,
      tipo_material: materialType,
      disciplina: formData.disciplina || formData.subject,
      serie: formData.serie || formData.grade,
      tema: formData.tema || formData.topic,
      professor: formData.professor || '',
      data: formData.data || new Date().toISOString().split('T')[0]
    };
  } catch (error) {
    console.error('Error parsing generated content:', error);
    
    // Return basic structure if parsing fails
    return {
      titulo: `${materialType.charAt(0).toUpperCase() + materialType.slice(1)} - ${formData.tema || formData.topic || 'Material Educativo'}`,
      conteudo: content,
      tipo_material: materialType,
      disciplina: formData.disciplina || formData.subject,
      serie: formData.serie || formData.grade,
      tema: formData.tema || formData.topic,
      professor: formData.professor || '',
      data: formData.data || new Date().toISOString().split('T')[0],
      erro: 'Conte√∫do gerado mas n√£o foi poss√≠vel estruturar completamente'
    };
  }
}
