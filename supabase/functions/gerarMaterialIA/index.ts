
import "https://deno.land/x/xhr@0.1.0/mod.ts";
import { serve } from "https://deno.land/std@0.168.0/http/server.ts";

const openAIApiKey = Deno.env.get('OPENAI_API_KEY');

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

interface MaterialFormData {
  tema?: string;
  topic?: string;
  disciplina?: string;
  subject?: string;
  serie?: string;
  grade?: string;
  assuntos?: string[];
  subjects?: string[];
  tipoQuestoes?: string;
  tiposQuestoes?: string[];
  numeroQuestoes?: number;
  quantidadeQuestoes?: number;
  professor?: string;
  data?: string;
  duracao?: string;
  bncc?: string;
}

serve(async (req) => {
  // Handle CORS preflight requests
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { materialType, formData } = await req.json() as {
      materialType: 'plano-de-aula' | 'slides' | 'atividade' | 'avaliacao';
      formData: MaterialFormData;
    };

    console.log('üìã Generating material:', { materialType, formData });

    if (!openAIApiKey) {
      console.error('‚ùå OpenAI API key not configured');
      return new Response(JSON.stringify({ error: 'OpenAI API key not configured' }), {
        status: 500,
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
      });
    }

    // Generate the appropriate prompt based on material type
    const prompt = generatePrompt(materialType, formData);
    console.log('üéØ Generated prompt for', materialType);

    // Call OpenAI API
    const response = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${openAIApiKey}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        model: 'gpt-4o',
        messages: [
          {
            role: 'system',
            content: 'Voc√™ √© um assistente especializado em criar materiais educacionais seguindo a BNCC. Retorne sempre conte√∫do estruturado e pedag√≥gico com base nas diretrizes brasileiras de educa√ß√£o. Seja espec√≠fico e detalhado em todas as se√ß√µes, evitando campos vazios ou incompletos. GERE TODO O CONTE√öDO baseado no tema, disciplina e s√©rie informados - n√£o use templates gen√©ricos. Use portugu√™s brasileiro correto, sem erros de gram√°tica ou ortografia.'
          },
          {
            role: 'user',
            content: prompt
          }
        ],
        temperature: 0.7,
        max_tokens: 4000,
      }),
    });

    if (!response.ok) {
      console.error('‚ùå OpenAI API error:', response.status, response.statusText);
      const errorData = await response.text();
      console.error('Error details:', errorData);
      return new Response(JSON.stringify({ error: 'Failed to generate content' }), {
        status: 500,
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
      });
    }

    const data = await response.json();
    const generatedContent = data.choices[0].message.content;

    console.log('‚úÖ Content generated successfully');

    // Parse the generated content and structure it appropriately
    const structuredContent = parseGeneratedContent(materialType, generatedContent, formData);

    return new Response(JSON.stringify({
      success: true,
      content: structuredContent,
      materialType,
      formData
    }), {
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });

  } catch (error) {
    console.error('‚ùå Error in gerarMaterialIA function:', error);
    return new Response(JSON.stringify({ 
      error: 'Internal server error',
      details: error.message 
    }), {
      status: 500,
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });
  }
});

function generatePrompt(materialType: string, formData: MaterialFormData): string {
  const tema = formData.tema || formData.topic || '';
  const disciplina = formData.disciplina || formData.subject || '';
  const serie = formData.serie || formData.grade || '';
  const professor = formData.professor || '';
  const data = formData.data || '';
  const duracao = formData.duracao || '';

  switch (materialType) {
    case 'plano-de-aula':
      return `
Voc√™ √© um professor especialista em planejamento pedag√≥gico de acordo com a BNCC (Base Nacional Comum Curricular).

Crie um plano de aula COMPLETO e DETALHADO com base nas seguintes informa√ß√µes:
- TEMA DA AULA: ${tema}
- DISCIPLINA: ${disciplina}
- S√âRIE/ANO: ${serie}

IMPORTANTE: GERE TODO O CONTE√öDO baseado especificamente no tema "${tema}" para a disciplina de ${disciplina} na s√©rie ${serie}. N√ÉO use conte√∫do gen√©rico.

REGRAS CR√çTICAS PARA RECURSOS POR ETAPA:
1. Cada etapa deve ter APENAS de 1 a 3 recursos espec√≠ficos e √∫nicos
2. N√ÉO repita recursos entre diferentes etapas - cada recurso deve ser usado apenas uma vez
3. Cada recurso deve ser espec√≠fico para a atividade daquela etapa
4. Use v√≠rgulas para separar recursos dentro de cada etapa
5. Cada recurso deve ser gramaticalmente correto e espec√≠fico

EXEMPLO DE RECURSOS CORRETOS:
- Introdu√ß√£o: "Quadro branco, marcadores coloridos"
- Desenvolvimento: "Material manipulativo, experimentos pr√°ticos"
- Pr√°tica: "Exerc√≠cios impressos, jogos educativos"
- Fechamento: "Fichas de avalia√ß√£o"

Retorne APENAS o JSON estruturado abaixo, preenchido com conte√∫do REAL e ESPEC√çFICO sobre "${tema}":

{
  "titulo": "Plano de Aula - ${tema}",
  "professor": "${professor}",
  "data": "${data}",
  "disciplina": "${disciplina}",
  "serie": "${serie}",
  "tema": "${tema}",
  "duracao": "[GERE uma dura√ß√£o adequada baseada no tema, por exemplo: 50 minutos, 100 minutos (2 aulas), etc]",
  "bncc": "[BUSQUE e RETORNE c√≥digos BNCC REAIS, ESPEC√çFICOS e OBRIGATORIAMENTE EXATOS para o tema '${tema}' em ${disciplina} na ${serie}. O c√≥digo BNCC deve ser SEMPRE o mais aderente e diretamente relacionado ao tema da aula, nunca gen√©rico. Exemplo: Se o tema for 'Geometria', retorne apenas c√≥digos BNCC que tratam de Geometria, como EF03MA17. N√ÉO retorne c√≥digos de outros temas. Se n√£o souber c√≥digos espec√≠ficos, deixe vazio.]",
  "objetivos": [
    "[OBJETIVO ESPEC√çFICO 1 sobre ${tema}]",
    "[OBJETIVO ESPEC√çFICO 2 sobre ${tema}]",
    "[OBJETIVO ESPEC√çFICO 3 sobre ${tema}]"
  ],
  "habilidades": [
    "[HABILIDADE ESPEC√çFICA 1 que ser√° desenvolvida com ${tema}]",
    "[HABILIDADE ESPEC√çFICA 2 que ser√° desenvolvida com ${tema}]",
    "[HABILIDADE ESPEC√çFICA 3 que ser√° desenvolvida com ${tema}]"
  ],
  "desenvolvimento": [
    { 
      "etapa": "Introdu√ß√£o", 
      "tempo": "[tempo espec√≠fico em minutos, ex: 10 minutos]", 
      "atividade": "[ATIVIDADE ESPEC√çFICA de introdu√ß√£o ao tema ${tema} - descreva detalhadamente o que ser√° feito]", 
      "recursos": "[1-3 RECURSOS √öNICOS espec√≠ficos APENAS para introdu√ß√£o, separados por v√≠rgula. Ex: Quadro branco, marcadores coloridos]" 
    },
    { 
      "etapa": "Desenvolvimento", 
      "tempo": "[tempo espec√≠fico em minutos, ex: 25 minutos]", 
      "atividade": "[ATIVIDADE ESPEC√çFICA de desenvolvimento do tema ${tema} - descreva detalhadamente o que ser√° feito]", 
      "recursos": "[1-3 RECURSOS √öNICOS espec√≠ficos APENAS para desenvolvimento, separados por v√≠rgula. Ex: Material manipulativo, experimentos pr√°ticos]" 
    },
    { 
      "etapa": "Pr√°tica", 
      "tempo": "[tempo espec√≠fico em minutos, ex: 10 minutos]", 
      "atividade": "[ATIVIDADE PR√ÅTICA ESPEC√çFICA sobre ${tema} - descreva detalhadamente o que ser√° feito]", 
      "recursos": "[1-3 RECURSOS √öNICOS espec√≠ficos APENAS para pr√°tica, separados por v√≠rgula. Ex: Exerc√≠cios impressos, jogos educativos]" 
    },
    { 
      "etapa": "Fechamento", 
      "tempo": "[tempo espec√≠fico em minutos, ex: 5 minutos]", 
      "atividade": "[ATIVIDADE ESPEC√çFICA de fechamento sobre ${tema} - descreva detalhadamente o que ser√° feito]", 
      "recursos": "[1-2 RECURSOS √öNICOS espec√≠ficos APENAS para fechamento, separados por v√≠rgula. Ex: Fichas de avalia√ß√£o]" 
    }
  ],
  "recursos": [
    "[RECURSO 1 espec√≠fico para ensinar ${tema}]",
    "[RECURSO 2 espec√≠fico para ensinar ${tema}]",
    "[RECURSO 3 espec√≠fico para ensinar ${tema}]"
  ],
  "conteudosProgramaticos": [
    "[CONTE√öDO ESPEC√çFICO 1 sobre ${tema}]",
    "[CONTE√öDO ESPEC√çFICO 2 sobre ${tema}]",
    "[CONTE√öDO ESPEC√çFICO 3 sobre ${tema}]"
  ],
  "metodologia": "[METODOLOGIA ESPEC√çFICA e detalhada para ensinar ${tema} em ${disciplina} para ${serie} - descreva como ser√° conduzida a aula]",
  "avaliacao": "[M√âTODO DE AVALIA√á√ÉO espec√≠fico para verificar aprendizado sobre ${tema} - descreva como ser√° avaliado]",
  "referencias": [
    "[REFER√äNCIA BIBLIOGR√ÅFICA 1 sobre ${tema} em ${disciplina}]",
    "[REFER√äNCIA BIBLIOGR√ÅFICA 2 sobre ${tema} em ${disciplina}]"
  ]
}

INSTRU√á√ïES FINAIS CR√çTICAS:
1. Cada etapa no "desenvolvimento" deve ter recursos √öNICOS que n√£o se repetem em outras etapas
2. Use v√≠rgulas para separar recursos dentro da string de cada etapa
3. Mantenha de 1 a 3 recursos por etapa (m√°ximo 3)
4. Os recursos devem ser espec√≠ficos e apropriados para a atividade daquela etapa
5. Use portugu√™s brasileiro correto sem erros gramaticais
6. N√ÉO REPITA recursos entre etapas diferentes
`;

    case 'slides':
      return `
Voc√™ √© um professor especialista em cria√ß√£o de slides educativos seguindo a BNCC.

Crie slides educativos ESPEC√çFICOS sobre "${tema}" para ${disciplina} na ${serie}.

IMPORTANTE: TODO O CONTE√öDO deve ser baseado especificamente no tema "${tema}". N√ÉO use conte√∫do gen√©rico.

INSTRU√á√ïES CR√çTICAS PARA PROMPTS DE IMAGEM - OTIMIZADOS PARA STABLE DIFFUSION XL:
- Todos os prompts devem ser ULTRA-ESPEC√çFICOS, DETALHADOS e CONTEXTUALIZADOS ao tema "${tema}" em ${disciplina}
- Adapte o conte√∫do visual √† faixa et√°ria de ${serie} - use linguagem visual apropriada para a idade
- Inclua elementos do contexto brasileiro quando relevante (fauna, flora, geografia, cultura brasileira)
- Seja EXTREMAMENTE espec√≠fico sobre o que deve aparecer na imagem
- Use linguagem visual descritiva rica em detalhes: cores, texturas, composi√ß√£o, estilo art√≠stico
- Especifique elementos concretos: objetos, cen√°rios, pessoas, animais, plantas, elementos geom√©tricos
- NUNCA mencione texto, palavras, letras, n√∫meros ou s√≠mbolos - isso ser√° tratado automaticamente pelo sistema
- Foque em elementos visuais puros: formas, cores, objetos, cen√°rios, composi√ß√µes

ESTRUTURA OBRIGAT√ìRIA:
- Slide 1: Capa com t√≠tulo e informa√ß√µes b√°sicas
- Slide 2: Objetivos da aula (4 objetivos espec√≠ficos)
- Slide 3: Introdu√ß√£o ao tema
- Slide 4: Conceito principal
- Slide 5: Desenvolvimento do Conte√∫do - Parte 1 (texto explicativo + imagem)
- Slide 6: Desenvolvimento do Conte√∫do - Parte 2 (texto explicativo + imagem)
- Slide 7: Desenvolvimento do Conte√∫do - Parte 3 (texto explicativo + imagem)
- Slide 8: Desenvolvimento do Conte√∫do - Parte 4 (texto explicativo + imagem)
- Slide 9: Exemplo Pr√°tico (exemplo concreto do tema + imagem)
- Slide 10: Tabela de dados/informa√ß√µes
- Slide 11: Atividade interativa
- Slide 12: Conclus√£o e pr√≥ximos passos

Retorne APENAS o JSON estruturado com todas as vari√°veis preenchidas especificamente sobre "${tema}":

{
  "titulo": "${tema} - ${disciplina}",
  "professor": "${professor}",
  "data": "${data}",
  "disciplina": "${disciplina}",
  "serie": "${serie}",
  "tema": "${tema}",
  "duracao": "[dura√ß√£o adequada para apresentar slides sobre ${tema}]",
  "bncc": "[c√≥digos BNCC relevantes para ${tema} em ${disciplina}]",
  "tema_imagem": "Vibrant educational illustration showcasing ${tema} in Brazilian ${disciplina} context for ${serie} students. Rich colorful composition featuring [DESCREVA ESPECIFICAMENTE elementos visuais relacionados ao tema]. Brazilian educational style, high quality artwork, detailed visual elements, bright engaging colors, clean professional design",
  "slide_1_titulo": "${tema}",
  "slide_1_subtitulo": "Aula de ${disciplina} - ${serie}",
  "objetivo_1": "[OBJETIVO 1 espec√≠fico sobre ${tema}]",
  "objetivo_2": "[OBJETIVO 2 espec√≠fico sobre ${tema}]",
  "objetivo_3": "[OBJETIVO 3 espec√≠fico sobre ${tema}]",
  "objetivo_4": "[OBJETIVO 4 espec√≠fico sobre ${tema}]",
  "introducao_texto": "[INTRODU√á√ÉO espec√≠fica sobre ${tema} - explica√ß√£o clara do que ser√° aprendido]",
  "introducao_imagem": "Colorful introductory illustration about ${tema} in Brazilian ${disciplina} education for ${serie}. Shows [DESCREVA elementos espec√≠ficos que introduzem o tema visualmente]. Vibrant educational artwork, engaging composition, age-appropriate visual style, Brazilian cultural context",
  "conceitos_texto": "[CONCEITOS fundamentais espec√≠ficos sobre ${tema} - defini√ß√£o clara e did√°tica]",
  "conceito_principal": "[CONCEITO principal de ${tema} - defini√ß√£o concisa e precisa]",
  "conceitos_imagem": "Educational infographic-style illustration demonstrating key concepts of ${tema} for Brazilian ${disciplina} in ${serie}. Visual representation of [DESCREVA os conceitos espec√≠ficos visualmente]. Clean infographic design, bright Brazilian educational colors, clear visual hierarchy, engaging layout",
  "desenvolvimento_1_titulo": "[T√çTULO do primeiro aspecto do desenvolvimento de ${tema}]",
  "desenvolvimento_1_texto": "[EXPLICA√á√ÉO detalhada do primeiro aspecto importante de ${tema} - texto did√°tico e claro]",
  "desenvolvimento_1_imagem": "Detailed educational artwork showing first key aspect of ${tema} in Brazilian ${disciplina} context. Illustrates [DESCREVA especificamente o primeiro aspecto visual com detalhes ricos]. Professional educational illustration, vibrant colors, age-appropriate for ${serie}, Brazilian educational style, high quality composition",
  "desenvolvimento_2_titulo": "[T√çTULO do segundo aspecto do desenvolvimento de ${tema}]",
  "desenvolvimento_2_texto": "[EXPLICA√á√ÉO detalhada do segundo aspecto importante de ${tema} - texto did√°tico e claro]",
  "desenvolvimento_2_imagem": "Comprehensive visual representation of second aspect of ${tema} in Brazilian ${disciplina} education. Features [DESCREVA especificamente o segundo aspecto com elementos visuais detalhados]. Rich educational artwork, engaging colors, suitable for ${serie} students, Brazilian context, professional quality",
  "desenvolvimento_3_titulo": "[T√çTULO do terceiro aspecto do desenvolvimento de ${tema}]",
  "desenvolvimento_3_texto": "[EXPLICA√á√ÉO detalhada do terceiro aspecto importante de ${tema} - texto did√°tico e claro]",
  "desenvolvimento_3_imagem": "Educational illustration depicting third important element of ${tema} in Brazilian ${disciplina} curriculum. Showcases [DESCREVA especificamente o terceiro aspecto com detalhes visuais]. Colorful educational design, age-appropriate for ${serie}, Brazilian educational approach, high-quality artwork",
  "desenvolvimento_4_titulo": "[T√çTULO do quarto aspecto do desenvolvimento de ${tema}]",
  "desenvolvimento_4_texto": "[EXPLICA√á√ÉO detalhada do quarto aspecto importante de ${tema} - texto did√°tico e claro]",
  "desenvolvimento_4_imagem": "Professional educational artwork illustrating fourth key component of ${tema} for Brazilian ${disciplina}. Demonstrates [DESCREVA especificamente o quarto aspecto com elementos visuais ricos]. Vibrant educational illustration, engaging design for ${serie}, Brazilian pedagogical style, detailed composition",
  "exemplo_titulo": "[T√çTULO do exemplo pr√°tico de ${tema}]",
  "exemplo_conteudo": "[EXEMPLO PR√ÅTICO concreto e espec√≠fico sobre ${tema} - situa√ß√£o real onde o tema se aplica]",
  "exemplo_imagem": "Realistic educational scene showing practical application of ${tema} in Brazilian context for ${disciplina}. Depicts [DESCREVA especificamente o exemplo pr√°tico com cen√°rio detalhado]. High-quality realistic illustration, Brazilian setting, educational purpose for ${serie}, engaging visual storytelling, professional artwork",
  "tabela_titulo": "[T√çTULO de tabela espec√≠fica sobre ${tema}]",
  "coluna_1": "[cabe√ßalho coluna 1 sobre ${tema}]",
  "coluna_2": "[cabe√ßalho coluna 2 sobre ${tema}]",
  "coluna_3": "[cabe√ßalho coluna 3 sobre ${tema}]",
  "linha_1_col_1": "[dado espec√≠fico de ${tema}]",
  "linha_1_col_2": "[dado espec√≠fico de ${tema}]",
  "linha_1_col_3": "[dado espec√≠fico de ${tema}]",
  "linha_2_col_1": "[dado espec√≠fico de ${tema}]",
  "linha_2_col_2": "[dado espec√≠fico de ${tema}]",
  "linha_2_col_3": "[dado espec√≠fico de ${tema}]",
  "linha_3_col_1": "[dado espec√≠fico de ${tema}]",
  "linha_3_col_2": "[dado espec√≠fico de ${tema}]",
  "linha_3_col_3": "[dado espec√≠fico de ${tema}]",
  "atividade_pergunta": "[PERGUNTA espec√≠fica sobre ${tema}]",
  "opcao_a": "[alternativa A sobre ${tema}]",
  "opcao_b": "[alternativa B sobre ${tema}]",
  "opcao_c": "[alternativa C sobre ${tema}]",
  "opcao_d": "[alternativa D sobre ${tema}]",
  "conclusao_texto": "[S√çNTESE dos pontos principais sobre ${tema}]",
  "ponto_chave_1": "[PONTO-CHAVE 1 para memorizar sobre ${tema}]",
  "ponto_chave_2": "[PONTO-CHAVE 2 para memorizar sobre ${tema}]",
  "proximo_passo_1": "[PASSO 1 para continuar estudando ${tema}]",
  "proximo_passo_2": "[PASSO 2 para continuar estudando ${tema}]",
  "proximo_passo_3": "[PASSO 3 para continuar estudando ${tema}]"
}

REGRAS FINAIS PARA PROMPTS DE IMAGEM OTIMIZADOS PARA STABLE DIFFUSION XL:
1. Cada prompt deve ser √∫nico, espec√≠fico e ultra-detalhado
2. Use vocabul√°rio visual rico: cores espec√≠ficas, texturas, composi√ß√µes, estilos art√≠sticos
3. Adapte a complexidade visual √† faixa et√°ria de ${serie}
4. Inclua contexto brasileiro quando educacionalmente relevante
5. Seja extremamente espec√≠fico sobre elementos visuais: objetos, cen√°rios, pessoas, elementos naturais
6. Use descri√ß√µes que evoquem qualidade art√≠stica: "high quality", "professional artwork", "detailed composition"
7. Especifique o estilo educacional brasileiro: "Brazilian educational style", "pedagogical approach"
8. Garanta que cada prompt tenha prop√≥sito pedag√≥gico espec√≠fico e claro

GERE conte√∫do REAL e ESPEC√çFICO sobre "${tema}". Adapte √† faixa et√°ria de ${serie}. Use portugu√™s brasileiro correto.
`;

    case 'atividade':
      const numQuestoes = formData.numeroQuestoes || formData.quantidadeQuestoes || 10;
      const tiposQuestoes = formData.tiposQuestoes || (formData.tipoQuestoes ? [formData.tipoQuestoes] : ['multipla-escolha', 'verdadeiro-falso', 'completar-lacunas']);
      
      return `
Voc√™ √© um professor especialista em criar ATIVIDADES DE APRENDIZAGEM ATIVA seguindo a BNCC.

Crie uma ATIVIDADE EDUCATIVA INTERATIVA sobre "${tema}" para ${disciplina} na ${serie}.

IMPORTANTE: Este √© um material de ATIVIDADE PR√ÅTICA focado em APRENDIZAGEM ATIVA, n√£o uma avalia√ß√£o formal. 
O objetivo √© ENVOLVER os alunos em pr√°ticas educativas din√¢micas e participativas sobre "${tema}".

CARACTER√çSTICAS DE UMA ATIVIDADE (n√£o avalia√ß√£o):
- Foco no PROCESSO DE APRENDIZAGEM, n√£o na verifica√ß√£o
- Exerc√≠cios PR√ÅTICOS e INTERATIVOS
- Ambiente de COLABORA√á√ÉO e DESCOBERTA
- Feedback FORMATIVO e CONSTRUTIVO
- Est√≠mulo √† PARTICIPA√á√ÉO ATIVA dos estudantes
- Desenvolvimento de HABILIDADES atrav√©s da pr√°tica

TIPOS DE QUEST√ïES SOLICITADOS: ${tiposQuestoes.join(', ')}
N√öMERO DE QUEST√ïES: ${numQuestoes}

OBRIGAT√ìRIO - TIPOS DE QUEST√ïES DISPON√çVEIS:
1. "multipla_escolha" - 4 alternativas (A, B, C, D) com apenas uma correta
2. "verdadeiro_falso" - Afirma√ß√£o para marcar V ou F
3. "completar" - Frase com lacuna para completar
4. "ligar" - Conectar itens da coluna A com itens da coluna B
5. "dissertativa" - Pergunta aberta para resposta por extenso
6. "desenho" - Solicita desenho ou esquema como resposta

REGRAS CR√çTICAS PARA GERA√á√ÉO DAS QUEST√ïES:
- Distribua os tipos de quest√µes de forma EQUILIBRADA conforme solicitado
- Para quest√µes "multipla_escolha": sempre 4 alternativas v√°lidas e plaus√≠veis
- Para quest√µes "ligar": forne√ßa exatamente 4 itens na coluna A e 4 na coluna B
- Para quest√µes "completar": deixe uma lacuna clara marcada com ______
- Para quest√µes "verdadeiro_falso": crie afirma√ß√µes que exijam an√°lise
- Para quest√µes "dissertativa": fa√ßa perguntas que promovam reflex√£o
- Para quest√µes "desenho": solicite representa√ß√µes visuais pedag√≥gicas

Retorne APENAS o JSON estruturado com conte√∫do ESPEC√çFICO sobre "${tema}":

{
  "titulo": "Atividade Pr√°tica - ${tema}",
  "professor": "${professor}",
  "data": "${data}",
  "disciplina": "${disciplina}",
  "serie": "${serie}",
  "tema": "${tema}",
  "tipo_material": "atividade",
  "duracao": "[dura√ß√£o adequada para a atividade pr√°tica sobre ${tema}]",
  "bncc": "[c√≥digos BNCC espec√≠ficos para ${tema} em ${disciplina}]",
  "objetivo_geral": "[OBJETIVO EDUCATIVO da atividade pr√°tica sobre ${tema} - foco no processo de aprendizagem]",
  "objetivos_especificos": [
    "[OBJETIVO ESPEC√çFICO 1 da atividade sobre ${tema}]",
    "[OBJETIVO ESPEC√çFICO 2 da atividade sobre ${tema}]",
    "[OBJETIVO ESPEC√çFICO 3 da atividade sobre ${tema}]"
  ],
  "introducao": "[INTRODU√á√ÉO motivadora para a atividade sobre ${tema} - explicar o prop√≥sito da pr√°tica]",
  "instrucoes": "[INSTRU√á√ïES CLARAS de como realizar a atividade sobre ${tema} - passo a passo]",
  "questoes": [
    ${Array.from({length: numQuestoes}, (_, i) => {
      const tipoIndex = i % tiposQuestoes.length;
      const tipo = tiposQuestoes[tipoIndex];
      let tipoFinal = tipo;
      
      // Mapear tipos para os aceitos pelo sistema
      if (tipo === 'multipla-escolha') tipoFinal = 'multipla_escolha';
      if (tipo === 'verdadeiro-falso') tipoFinal = 'verdadeiro_falso';
      if (tipo === 'completar-lacunas') tipoFinal = 'completar';
      
      return `{
      "numero": ${i + 1},
      "tipo": "${tipoFinal}",
      "enunciado": "[ENUNCIADO da quest√£o ${i + 1} sobre ${tema} - adaptado para tipo ${tipoFinal}]",
      ${tipoFinal === 'multipla_escolha' ? `"opcoes": [
        "[ALTERNATIVA A - plaus√≠vel e relacionada ao tema]",
        "[ALTERNATIVA B - plaus√≠vel e relacionada ao tema]", 
        "[ALTERNATIVA C - plaus√≠vel e relacionada ao tema]",
        "[ALTERNATIVA D - plaus√≠vel e relacionada ao tema]"
      ],` : tipoFinal === 'ligar' ? `"coluna_a": [
        "[ITEM A1 - conceito/termo sobre ${tema}]",
        "[ITEM A2 - conceito/termo sobre ${tema}]",
        "[ITEM A3 - conceito/termo sobre ${tema}]",
        "[ITEM A4 - conceito/termo sobre ${tema}]"
      ],
      "coluna_b": [
        "[ITEM B1 - defini√ß√£o/descri√ß√£o sobre ${tema}]",
        "[ITEM B2 - defini√ß√£o/descri√ß√£o sobre ${tema}]",
        "[ITEM B3 - defini√ß√£o/descri√ß√£o sobre ${tema}]",
        "[ITEM B4 - defini√ß√£o/descri√ß√£o sobre ${tema}]"
      ],` : `"opcoes": [],`}
      "resposta_correta": "[RESPOSTA CORRETA ou orienta√ß√£o detalhada]",
      "explicacao": "[EXPLICA√á√ÉO EDUCATIVA sobre ${tema} - feedback formativo]",
      "dica_pedagogica": "[DICA para o professor sobre esta quest√£o]"
    }`;
    }).join(',\n    ')}
  ],
  "recursos_necessarios": [
    "[RECURSO 1 para realizar a atividade sobre ${tema}]",
    "[RECURSO 2 para realizar a atividade sobre ${tema}]",
    "[RECURSO 3 para realizar a atividade sobre ${tema}]"
  ],
  "metodologia": "[METODOLOGIA da atividade - como conduzir a pr√°tica sobre ${tema}]",
  "criterios_acompanhamento": [
    "[CRIT√âRIO 1 para acompanhar o desenvolvimento dos alunos]",
    "[CRIT√âRIO 2 para acompanhar o desenvolvimento dos alunos]",
    "[CRIT√âRIO 3 para acompanhar o desenvolvimento dos alunos]"
  ],
  "sugestoes_adaptacao": "[SUGEST√ïES para adaptar a atividade a diferentes n√≠veis de aprendizagem]",
  "extensao_atividade": "[SUGEST√ïES para estender ou aprofundar a atividade sobre ${tema}]",
  "referencias": [
    "[REFER√äNCIA 1 sobre ${tema} em ${disciplina}]",
    "[REFER√äNCIA 2 sobre ${tema} em ${disciplina}]"
  ]
}

INSTRU√á√ïES FINAIS CR√çTICAS:
1. DISTRIBUA os tipos de quest√µes EQUILIBRADAMENTE entre os tipos solicitados
2. Para "multipla_escolha": sempre 4 alternativas v√°lidas e plaus√≠veis
3. Para "ligar": exatamente 4 itens em cada coluna com correspond√™ncias claras
4. Para "completar": use lacunas claras marcadas com ______
5. Para "verdadeiro_falso": crie afirma√ß√µes que exijam an√°lise cr√≠tica
6. FOQUE em atividades PR√ÅTICAS e INTERATIVAS
7. Use linguagem MOTIVADORA e ENVOLVENTE
8. Promova PARTICIPA√á√ÉO ATIVA dos estudantes
9. Adapte √† faixa et√°ria de ${serie}
10. Use portugu√™s brasileiro correto
`;

    case 'avaliacao':
      const numQuestoesAval = formData.numeroQuestoes || formData.quantidadeQuestoes || 10;
      const tiposQuestoesAval = formData.tiposQuestoes || (formData.tipoQuestoes ? [formData.tipoQuestoes] : ['multipla-escolha', 'verdadeiro-falso', 'dissertativa']);
      
      return `
Voc√™ √© um professor especialista em criar AVALIA√á√ïES FORMAIS seguindo a BNCC.

Crie uma AVALIA√á√ÉO ESTRUTURADA sobre "${tema}" para ${disciplina} na ${serie}.

IMPORTANTE: Este √© um material de AVALIA√á√ÉO FORMAL focado na VERIFICA√á√ÉO DE APRENDIZAGEM sobre "${tema}".
O objetivo √© MENSURAR o conhecimento adquirido pelos alunos de forma objetiva e criteriosa.

CARACTER√çSTICAS DE UMA AVALIA√á√ÉO (n√£o atividade):
- Foco na VERIFICA√á√ÉO DO APRENDIZADO
- Quest√µes OBJETIVAS e MENSUR√ÅVEIS  
- Crit√©rios CLAROS de corre√ß√£o
- Ambiente FORMAL de teste
- Feedback AVALIATIVO e CLASSIFICAT√ìRIO
- Verifica√ß√£o do DOM√çNIO dos conte√∫dos
- Instrumentos de MEDI√á√ÉO do conhecimento

TIPOS DE QUEST√ïES SOLICITADOS: ${tiposQuestoesAval.join(', ')}
N√öMERO DE QUEST√ïES: ${numQuestoesAval}

OBRIGAT√ìRIO - TIPOS DE QUEST√ïES DISPON√çVEIS:
1. "multipla_escolha" - 4 alternativas (A, B, C, D) com apenas uma correta
2. "verdadeiro_falso" - Afirma√ß√£o para marcar V ou F
3. "completar" - Frase com lacuna para completar
4. "ligar" - Conectar itens da coluna A com itens da coluna B
5. "dissertativa" - Pergunta aberta para resposta por extenso
6. "desenho" - Solicita desenho ou esquema como resposta

REGRAS CR√çTICAS PARA GERA√á√ÉO DAS QUEST√ïES:
- Distribua os tipos de quest√µes de forma EQUILIBRADA conforme solicitado
- Para quest√µes "multipla_escolha": sempre 4 alternativas v√°lidas e plaus√≠veis
- Para quest√µes "ligar": forne√ßa exatamente 4 itens na coluna A e 4 na coluna B
- Para quest√µes "completar": deixe uma lacuna clara marcada com ______
- Para quest√µes "verdadeiro_falso": crie afirma√ß√µes que exijam an√°lise
- Para quest√µes "dissertativa": fa√ßa perguntas que promovam an√°lise cr√≠tica
- Para quest√µes "desenho": solicite representa√ß√µes visuais t√©cnicas

Retorne APENAS o JSON estruturado com conte√∫do ESPEC√çFICO sobre "${tema}":

{
  "titulo": "Avalia√ß√£o - ${tema}",
  "professor": "${professor}",
  "data": "${data}",
  "disciplina": "${disciplina}",
  "serie": "${serie}",
  "tema": "${tema}",
  "tipo_material": "avaliacao",
  "duracao": "[dura√ß√£o adequada para a avalia√ß√£o sobre ${tema}]",
  "valor_total": "[PONTUA√á√ÉO TOTAL da avalia√ß√£o - ex: 10,0 pontos]",
  "bncc": "[c√≥digos BNCC espec√≠ficos para ${tema} em ${disciplina}]",
  "objetivo_avaliativo": "[OBJETIVO da avalia√ß√£o - verificar aprendizagem sobre ${tema}]",
  "competencias_avaliadas": [
    "[COMPET√äNCIA 1 avaliada sobre ${tema}]",
    "[COMPET√äNCIA 2 avaliada sobre ${tema}]",
    "[COMPET√äNCIA 3 avaliada sobre ${tema}]"
  ],
  "instrucoes_gerais": "[INSTRU√á√ïES FORMAIS para realiza√ß√£o da avalia√ß√£o sobre ${tema}]",
  "questoes": [
    ${Array.from({length: numQuestoesAval}, (_, i) => {
      const tipoIndex = i % tiposQuestoesAval.length;
      const tipo = tiposQuestoesAval[tipoIndex];
      let tipoFinal = tipo;
      
      // Mapear tipos para os aceitos pelo sistema
      if (tipo === 'multipla-escolha') tipoFinal = 'multipla_escolha';
      if (tipo === 'verdadeiro-falso') tipoFinal = 'verdadeiro_falso';
      if (tipo === 'completar-lacunas') tipoFinal = 'completar';
      
      return `{
      "numero": ${i + 1},
      "tipo": "${tipoFinal}",
      "valor": "[PONTUA√á√ÉO da quest√£o ${i + 1} - ex: 1,0 ponto]",
      "enunciado": "[ENUNCIADO da quest√£o ${i + 1} sobre ${tema} - claro e objetivo para tipo ${tipoFinal}]",
      ${tipoFinal === 'multipla_escolha' ? `"opcoes": [
        "[ALTERNATIVA A - tecnicamente correta ou incorreta]",
        "[ALTERNATIVA B - tecnicamente correta ou incorreta]", 
        "[ALTERNATIVA C - tecnicamente correta ou incorreta]",
        "[ALTERNATIVA D - tecnicamente correta ou incorreta]"
      ],` : tipoFinal === 'ligar' ? `"coluna_a": [
        "[ITEM A1 - conceito/termo sobre ${tema}]",
        "[ITEM A2 - conceito/termo sobre ${tema}]",
        "[ITEM A3 - conceito/termo sobre ${tema}]",
        "[ITEM A4 - conceito/termo sobre ${tema}]"
      ],
      "coluna_b": [
        "[ITEM B1 - defini√ß√£o/descri√ß√£o sobre ${tema}]",
        "[ITEM B2 - defini√ß√£o/descri√ß√£o sobre ${tema}]",
        "[ITEM B3 - defini√ß√£o/descri√ß√£o sobre ${tema}]",
        "[ITEM B4 - defini√ß√£o/descri√ß√£o sobre ${tema}]"
      ],` : `"opcoes": [],`}
      "resposta_correta": "[RESPOSTA CORRETA]",
      "criterios_correcao": "[CRIT√âRIOS para corre√ß√£o desta quest√£o]",
      "habilidade_avaliada": "[HABILIDADE BNCC avaliada nesta quest√£o]"
    }`;
    }).join(',\n    ')}
  ],
  "criterios_avaliacao": {
    "excelente": "[CRIT√âRIO para conceito EXCELENTE (90-100%)]",
    "bom": "[CRIT√âRIO para conceito BOM (70-89%)]",
    "satisfatorio": "[CRIT√âRIO para conceito SATISFAT√ìRIO (50-69%)]",
    "insuficiente": "[CRIT√âRIO para conceito INSUFICIENTE (0-49%)]"
  },
  "rubrica_avaliacao": [
    {
      "aspecto": "[ASPECTO 1 avaliado sobre ${tema}]",
      "criterio": "[CRIT√âRIO de avalia√ß√£o para este aspecto]",
      "pontuacao": "[PONTUA√á√ÉO para este aspecto]"
    },
    {
      "aspecto": "[ASPECTO 2 avaliado sobre ${tema}]", 
      "criterio": "[CRIT√âRIO de avalia√ß√£o para este aspecto]",
      "pontuacao": "[PONTUA√á√ÉO para este aspecto]"
    },
    {
      "aspecto": "[ASPECTO 3 avaliado sobre ${tema}]",
      "criterio": "[CRIT√âRIO de avalia√ß√£o para este aspecto]", 
      "pontuacao": "[PONTUA√á√ÉO para este aspecto]"
    }
  ],
  "observacoes_correcao": "[ORIENTA√á√ïES para corre√ß√£o da avalia√ß√£o sobre ${tema}]",
  "feedback_pos_avaliacao": "[ORIENTA√á√ïES para feedback ap√≥s corre√ß√£o]",
  "referencias": [
    "[REFER√äNCIA 1 sobre ${tema} em ${disciplina}]",
    "[REFER√äNCIA 2 sobre ${tema} em ${disciplina}]"
  ]
}

INSTRU√á√ïES FINAIS CR√çTICAS:
1. DISTRIBUA os tipos de quest√µes EQUILIBRADAMENTE entre os tipos solicitados
2. Para "multipla_escolha": sempre 4 alternativas v√°lidas e plaus√≠veis
3. Para "ligar": exatamente 4 itens em cada coluna com correspond√™ncias verific√°veis
4. Para "completar": use lacunas claras marcadas com ______
5. Para "verdadeiro_falso": crie afirma√ß√µes que exijam conhecimento espec√≠fico
6. FOQUE na VERIFICA√á√ÉO OBJETIVA do aprendizado
7. Use linguagem FORMAL e CLARA
8. Estabele√ßa CRIT√âRIOS MENSUR√ÅVEIS de avalia√ß√£o
9. Inclua RUBRICAS E PONTUA√á√ïES espec√≠ficas
10. Adapte √† faixa et√°ria de ${serie}
11. Use portugu√™s brasileiro correto
`;

    default:
      return `Gere um material educativo sobre ${tema} para ${disciplina} na ${serie}.`;
  }
}

function parseGeneratedContent(materialType: string, content: string, formData: MaterialFormData) {
  try {
    // Try to parse as JSON first
    const jsonMatch = content.match(/\{[\s\S]*\}/);
    if (jsonMatch) {
      const parsedContent = JSON.parse(jsonMatch[0]);
      
      // Enhanced parsing for activities and assessments with better question handling
      if (materialType === 'atividade' || materialType === 'avaliacao') {
        if (parsedContent.questoes && Array.isArray(parsedContent.questoes)) {
          parsedContent.questoes = parsedContent.questoes.map((questao: any, index: number) => {
            // Ensure proper question structure
            const processedQuestion = {
              numero: questao.numero || (index + 1),
              tipo: questao.tipo || 'multipla_escolha',
              enunciado: questao.enunciado || '',
              opcoes: questao.opcoes || [],
              coluna_a: questao.coluna_a || [],
              coluna_b: questao.coluna_b || [],
              resposta_correta: questao.resposta_correta || '',
              explicacao: questao.explicacao || '',
              dica_pedagogica: questao.dica_pedagogica || '',
              ...(materialType === 'avaliacao' && {
                valor: questao.valor || '1,0 ponto',
                criterios_correcao: questao.criterios_correcao || '',
                habilidade_avaliada: questao.habilidade_avaliada || ''
              })
            };

            // Validate question types and structure
            switch (processedQuestion.tipo) {
              case 'multipla_escolha':
                if (!Array.isArray(processedQuestion.opcoes) || processedQuestion.opcoes.length !== 4) {
                  processedQuestion.opcoes = [
                    'Alternativa A - aguardando conte√∫do',
                    'Alternativa B - aguardando conte√∫do', 
                    'Alternativa C - aguardando conte√∫do',
                    'Alternativa D - aguardando conte√∫do'
                  ];
                }
                break;
              case 'ligar':
                if (!Array.isArray(processedQuestion.coluna_a) || processedQuestion.coluna_a.length !== 4) {
                  processedQuestion.coluna_a = ['Item A1', 'Item A2', 'Item A3', 'Item A4'];
                }
                if (!Array.isArray(processedQuestion.coluna_b) || processedQuestion.coluna_b.length !== 4) {
                  processedQuestion.coluna_b = ['Item B1', 'Item B2', 'Item B3', 'Item B4'];
                }
                processedQuestion.opcoes = []; // Clear opcoes for matching questions
                break;
              case 'verdadeiro_falso':
              case 'completar':
              case 'dissertativa':
              case 'desenho':
                processedQuestion.opcoes = []; // Clear opcoes for these types
                break;
            }

            return processedQuestion;
          });
        }
      }
      
      return parsedContent;
    }
    
    // If not JSON, return structured content based on material type
    return {
      titulo: `${materialType.charAt(0).toUpperCase() + materialType.slice(1)} - ${formData.tema || formData.topic || 'Material Educativo'}`,
      conteudo: content,
      tipo_material: materialType,
      disciplina: formData.disciplina || formData.subject,
      serie: formData.serie || formData.grade,
      tema: formData.tema || formData.topic,
      professor: formData.professor || '',
      data: formData.data || new Date().toISOString().split('T')[0]
    };
  } catch (error) {
    console.error('Error parsing generated content:', error);
    
    // Return basic structure if parsing fails
    return {
      titulo: `${materialType.charAt(0).toUpperCase() + materialType.slice(1)} - ${formData.tema || formData.topic || 'Material Educativo'}`,
      conteudo: content,
      tipo_material: materialType,
      disciplina: formData.disciplina || formData.subject,
      serie: formData.serie || formData.grade,
      tema: formData.tema || formData.topic,
      professor: formData.professor || '',
      data: formData.data || new Date().toISOString().split('T')[0],
      erro: 'Conte√∫do gerado mas n√£o foi poss√≠vel estruturar completamente'
    };
  }
}
